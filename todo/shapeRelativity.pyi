from typing import overload

from OCC.Core.gp import gp_Pnt
from OCC.Core.TopoDS import TopoDS_Edge, TopoDS_Face, TopoDS_Shape

def pointOnFace(pnt: gp_Pnt, face: TopoDS_Face, tol=1e-2) -> bool: ...
@overload
def twoParallelLine(line1: tuple[gp_Pnt, gp_Pnt], line2: tuple[gp_Pnt, gp_Pnt], tol=1e-6) -> bool: ...
@overload
def twoParallelLine(line1: TopoDS_Edge, line2: TopoDS_Edge, tol=1e-6) -> bool: ...
@overload
def twoParallelLine(line1, line2, tol=1e-6) -> bool: ...
def edgeOnFace(edge: TopoDS_Edge, face: TopoDS_Face, tol=1e-2, two_point=False) -> bool: ...
def twoParallelLine(line1, line2, tol=1e-6) -> bool: ...
def _getXYZ(pnt: gp_Pnt) -> list[float]: ...
def getEdgePoint(edge: TopoDS_Edge | TopoDS_Shape) -> tuple[gp_Pnt, gp_Pnt]: ...
def pointOnLineSegment(line: tuple[gp_Pnt, gp_Pnt], point: list[float], tolerance=1e-6) -> bool: ...
def twoEdgeIntersection(line1: tuple[gp_Pnt, gp_Pnt], line2: tuple[gp_Pnt, gp_Pnt], tolerance=1e-6) -> bool: ...
def getTwoEdgeIntersection(line1: tuple[gp_Pnt, gp_Pnt], line2: tuple[gp_Pnt, gp_Pnt], tolerance=1e-6) -> gp_Pnt | None: ...
